import axios from 'axios';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useState } from 'react';
import styles from '../styles/Home.module.css';
import DocumentList from '../components/Document/List';
import { Container, IconButton, TextField } from '@mui/material';
import { Close} from '@mui/icons-material';
import DocumentReader from '../components/Document/Reader';

const Home: NextPage = () => {
  const [result, setResult] = useState(null);
  const [activeDocument, setActiveDocument] = useState(null);

  /** @TODO: refactor */
  const search = async (event: { target: { value: any; }; }) => {
    try { 
      const result = await axios.post('http://localhost:9200/documents/_search?pretty', {
        query: {
          multi_match: {
            query: `*${event.target.value}*`,
            type: "best_fields",
            fields: ['title', 'content']
          },
        },
      },
      {
        auth: {
          username: 'elastic',
          password: '1234',
        }
      });

      setResult((result.data.hits.hits && result.data.hits.hits.map(hit => hit._source)) ?? []);
    } catch (error) {
      setResult(null);
    }
  }

  const showDocumentList = () => {
    setActiveDocument(null);
   }

  return (
    <div className={styles.container}>
      <Head>
        <title>Document Search</title>
        <meta name="description" content="Generated by Jota GutiÃ©rrez" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to Document Search!
        </h1>
        <p className={styles.code_done}>
          Tier 1: Next app querying an elastic search node running in a docker instance
        </p>
        <p className={styles.code_done}>
          Tier 2: App posting to some sql database while elastic syncs through domain events
        </p>
        <p className={styles.code_done}>
          Tier 3: Use a message queue (rabbitMQ) to sync databases asynchronously
        </p>
        <Container maxWidth='xl' style={{overflow: 'visible', marginInline: 'auto'}}>
          <div style={{display: 'flex', flexDirection: 'row', width: '100%'}}>
            <div className={`${styles.documentList} ${!activeDocument && styles.active}`} style={{minWidth: '100%'}}>
              <p>
                <TextField fullWidth onChange={search} placeholder='search terms' label='Search' />
              </p>
              {result && <DocumentList documents={result} setActiveDocument={setActiveDocument} />}
            </div>
            <div className={`${styles.documentEditor} ${activeDocument && styles.active}`} 
              style={{minWidth: '100%'}}
            >
              <div style={{display: 'flex', alignItems: 'flex-end'}}>
                <div style={{marginLeft: 'auto'}}>
                  <IconButton onClick={showDocumentList}>
                    <Close />
                  </IconButton>
                </div>
              </div>
              {activeDocument && <DocumentReader document={activeDocument} />}
            </div>
          </div>
        </Container>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://es.linkedin.com/in/jos%C3%A9-el%C3%ADas-guti%C3%A9rrez-32114696"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
          ðŸ’©
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Home
